[{"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\reportWebVitals.js":"1","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\App.js":"2","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\screens\\HomeScreen.js":"3","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\NavigationHeader.js":"4","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\index.js":"5","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\store\\useStore.js":"6","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HomeScreenComps\\InputShell.js":"7","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HomeScreenComps\\MainHomeScreen.js":"8","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HomeScreenComps\\InputNamePair.js":"9","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HomeScreenComps\\InputSeperator.js":"10","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HomeScreenComps\\SubHeader.js":"11","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HomeScreenComps\\OutputNamePair.js":"12","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HoemScreenOutputComps\\OutputField.js":"13","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HoemScreenOutputComps\\StaticAndDynamicOutputRow.js":"14","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HoemScreenOutputComps\\FinalOutputSection.js":"15","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\dataClasses\\BHKWStromKW.js":"16","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\store\\useVerweiseStore.js":"17","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HomeScreenComps\\calcLogic.js":"18","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\screens\\ImpressumScreen.js":"19","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\Footer.js":"20","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HomeScreenComps\\convertLogic.js":"21","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\Data\\complicatedData.js":"22","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\screens\\InfoScreen.js":"23","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\InfoScreenComps\\InfoContainer.js":"24","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\InfoScreenComps\\InfoHeader.js":"25","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\InfoScreenComps\\InfoParagraph.js":"26","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\InfoScreenComps\\InfoImg.js":"27","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\InfoScreenComps\\InfoSectorBorder.js":"28"},{"size":362,"mtime":1609808008890,"results":"29","hashOfConfig":"30"},{"size":622,"mtime":1613080080273,"results":"31","hashOfConfig":"30"},{"size":475,"mtime":1612867292180,"results":"32","hashOfConfig":"30"},{"size":4676,"mtime":1613118484181,"results":"33","hashOfConfig":"30"},{"size":500,"mtime":1612532206294,"results":"34","hashOfConfig":"30"},{"size":1462,"mtime":1612520081450,"results":"35","hashOfConfig":"30"},{"size":870,"mtime":1612530190685,"results":"36","hashOfConfig":"30"},{"size":10145,"mtime":1613079975792,"results":"37","hashOfConfig":"30"},{"size":2909,"mtime":1612528930925,"results":"38","hashOfConfig":"30"},{"size":325,"mtime":1612530199928,"results":"39","hashOfConfig":"30"},{"size":227,"mtime":1610027579844,"results":"40","hashOfConfig":"30"},{"size":641,"mtime":1612517186380,"results":"41","hashOfConfig":"30"},{"size":450,"mtime":1613047142714,"results":"42","hashOfConfig":"30"},{"size":2898,"mtime":1613048090469,"results":"43","hashOfConfig":"30"},{"size":185482,"mtime":1613048061041,"results":"44","hashOfConfig":"30"},{"size":466,"mtime":1610196365905,"results":"45","hashOfConfig":"30"},{"size":535,"mtime":1610196497080,"results":"46","hashOfConfig":"30"},{"size":8676,"mtime":1612824426164,"results":"47","hashOfConfig":"30"},{"size":3687,"mtime":1613048650752,"results":"48","hashOfConfig":"30"},{"size":604,"mtime":1613082227098,"results":"49","hashOfConfig":"30"},{"size":421,"mtime":1612518620330,"results":"50","hashOfConfig":"30"},{"size":2620,"mtime":1612825470614,"results":"51","hashOfConfig":"30"},{"size":6328,"mtime":1613135679789,"results":"52","hashOfConfig":"30"},{"size":299,"mtime":1613085041382,"results":"53","hashOfConfig":"30"},{"size":192,"mtime":1613081076553,"results":"54","hashOfConfig":"30"},{"size":206,"mtime":1613081414011,"results":"55","hashOfConfig":"30"},{"size":226,"mtime":1613084794987,"results":"56","hashOfConfig":"30"},{"size":206,"mtime":1613085482337,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1yobmtk",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"67"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\reportWebVitals.js",[],["127","128"],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\App.js",[],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\screens\\HomeScreen.js",[],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\NavigationHeader.js",[],["129","130"],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\index.js",[],["131","132"],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\store\\useStore.js",[],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HomeScreenComps\\InputShell.js",[],["133","134"],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HomeScreenComps\\MainHomeScreen.js",["135"],"import React, {useEffect} from \"react\"\r\nimport InputShell from \"./InputShell\";\r\nimport InputNamePair from \"./InputNamePair\"\r\nimport InputSeperator from \"./InputSeperator\"\r\nimport SubHeader from \"./SubHeader\"\r\nimport OutputNamePair from \"./OutputNamePair\"\r\nimport useStore from \"../../store/useStore\"\r\nimport calcLogic from \"./calcLogic\"\r\nimport convertLogic from \"./convertLogic\"\r\n\r\n\r\n//Verweis Store import\r\nimport useVerweiseStore from \"../../store/useVerweiseStore\" \r\n\r\nimport FinalOutputSection from \"../HoemScreenOutputComps/FinalOutputSection\"\r\n\r\nconst MainHomeScreen = props => {\r\n\r\n    const state = convertLogic.stateToFloat(useStore())\r\n    const bhkwState = useVerweiseStore(state => state.BHKWStromKW)\r\n\r\n   \r\n    const checkIfDefined = (calculation, doRound) => {\r\n        return  ((calculation) ? (doRound ? Math.round((calculation)) : (Math.round((calculation) *100))/100) : \"0\").toString()\r\n    } \r\n    \r\n    return (\r\n        <div className=\"mx-2 mb-2 mt-20\">\r\n\r\n            {/*Kunde/Bearbeiter section*/}\r\n\r\n            <InputShell header=\"Kunde/Bearbeiter\">\r\n                {/*left side*/}\r\n                <InputSeperator>\r\n                    <InputNamePair textinput={true} name=\"Projekt:\" targetStateName=\"Projekt\"/>\r\n                    <InputNamePair textinput={true} name=\"Straße:\"  targetStateName=\"Straße\"/>\r\n                    <InputNamePair textinput={true} name=\"PLZ/Ort:\" targetStateName=\"PLZ\"/>\r\n                </InputSeperator>\r\n                {/*right side*/}\r\n                <InputSeperator>\r\n                    <InputNamePair textinput={true} name=\"AP Kunde:\"  targetStateName=\"APKunde\"/>\r\n                    <InputNamePair textinput={true} name=\"Bearbeiter:\"  targetStateName=\"Bearbeiter\"/>\r\n                    <InputNamePair textinput={true} name=\"Datum:\"  targetStateName=\"Datum\"/>\r\n                </InputSeperator>\r\n            </InputShell>\r\n\r\n            {/*Rahmendaten bestand Section*/}\r\n             <InputShell header=\"Rahmendaten Bestand\">\r\n                {/*left side*/} \r\n                <InputSeperator>\r\n                    <SubHeader subHeader=\"Gas\"/>\r\n                    <InputNamePair  targetStateName=\"GesamtbedarfErdgasFürHeizungUndWarmwasser\" name=\"Gesamtbedarf Erdgas für Heizung und Warmwasser:\" unit=\"MWH/a\"/>\r\n                    <InputNamePair  targetStateName=\"BasisgaspreisInklAllerAbgabenNetto\" name=\"Basisgaspreis inkl. aller Abgaben netto:\" unit=\"€/MWh\"/>\r\n                    <InputNamePair  targetStateName=\"Erdgasgrundpreis\" name=\"Erdgasgrundpreis:\" unit=\"€/a\"/>\r\n                    <SubHeader subHeader=\"Wärme\"/>\r\n                    <InputNamePair  targetStateName=\"JahresanlagennutzungsgradWärmeerzeuger\" name=\"Jahresanlagennutzungsgrad Wärmeerzeuger:\" unit=\"%\"/>\r\n                    <OutputNamePair name=\"entspricht einem Wärmebedarf:\" value={checkIfDefined(state.GesamtbedarfErdgasFürHeizungUndWarmwasser/(1.107/state.JahresanlagennutzungsgradWärmeerzeuger * 100), true)} unit=\"MWh/a\"/>\r\n                    <OutputNamePair name=\"entspricht einem Wärmepreis:\" value={checkIfDefined(state.BasisgaspreisInklAllerAbgabenNetto*1.107/state.JahresanlagennutzungsgradWärmeerzeuger*100)} unit=\"€/MWh\"/>\r\n                </InputSeperator>\r\n                {/*right side*/} \r\n                <InputSeperator>\r\n                    <SubHeader subHeader=\"Strom\"/>\r\n                    <InputNamePair  targetStateName=\"GesamtbedarfStrom\" name=\"Gesamtbedarf Strom:\" unit=\"MWh/a\"/>\r\n                    <InputNamePair  targetStateName=\"DurchschnittspreisBezug\" name=\"Durchschnittspreis Bezug:\" unit=\"Ct/kWh\"/>\r\n                    <InputNamePair  targetStateName=\"Stromsteuer\" name=\"Stromsteuer:\" unit=\"Ct/kWh\"/>\r\n                    <InputNamePair  targetStateName=\"EEGUmlage\" name=\"EEG-Umlage:\" unit=\"Ct/kWh\"/>\r\n                    <InputNamePair  targetStateName=\"KWKAufschlagCa\" name=\"KWK Aufschlag ca.:\" unit=\"Ct/kWh\"/>\r\n                    <InputNamePair  targetStateName=\"SonstigeAbgaben\" name=\"sonstige Abgaben:\" unit=\"Ct/kWh\"/>\r\n                    <OutputNamePair name=\"Strompreis inkl. aller Abgaben:\" value={checkIfDefined(state.DurchschnittspreisBezug + state.Stromsteuer + state.EEGUmlage + state.KWKAufschlagCa + state.SonstigeAbgaben)} unit=\"Ct/kWh\"/>\r\n                    <OutputNamePair name=\"Strompreis inkl. aller Abgaben:\" value={checkIfDefined((state.DurchschnittspreisBezug + state.Stromsteuer + state.EEGUmlage + state.KWKAufschlagCa + state.SonstigeAbgaben) * 10)} unit=\"€/MWh\"/>\r\n                </InputSeperator>\r\n             </InputShell>\r\n\r\n             {/*Rahmendaten für die Neuanlage Section*/}\r\n             <InputShell header=\"Rahmendaten für die Neuanlage\">\r\n                {/*left side*/}\r\n                <InputSeperator>\r\n                    <SubHeader subHeader=\"Auswahl BHKW\"/>\r\n                    <InputNamePair  targetStateName=\"elektrischeLeistung\" name=\"elektrische Leistung:\" dropdown={true} unit=\"kWel\"/>\r\n                    <OutputNamePair name=\"Thermische Leistung:\" value={bhkwState[state.elektrischeLeistung].thermischeLeistung} unit=\"kWth\"/>\r\n                    <OutputNamePair name=\"Brennstoffleistung Hi:\" value={bhkwState[state.elektrischeLeistung].brennstoffleistungKWHi} unit=\"kW\"/>\r\n                    <OutputNamePair name=\"Brennstoffleistung Hs:\" value={checkIfDefined(bhkwState[state.elektrischeLeistung].brennstoffleistungKWHi * 1.107, true)} unit=\"kW\"/>\r\n                    <InputNamePair  targetStateName=\"BetriebsstundenBHKW\" name=\"Betriebsstunden BHKW:\" unit=\"h/a\"/>\r\n                    <InputNamePair  targetStateName=\"EEXVergütungInklVermNetznutzung\" name=\"EEX Vergütung inkl. verm. Netznutzung:\" unit=\"€/MWh\"/>\r\n                    <InputNamePair  targetStateName=\"Inbetriebnahmedatum\" name=\"Inbetriebnahmedatum:\" unit=\"-\"/>\r\n                </InputSeperator>\r\n                {/*right side*/}\r\n                <InputSeperator>\r\n                    <SubHeader subHeader=\"Ergenisse BHKW\" />\r\n                    <OutputNamePair name=\"erzeugte Strommenge im BHKW:\" value={checkIfDefined(state.elektrischeLeistung*state.BetriebsstundenBHKW/1000)} unit=\"MWh/a\" />\r\n                    <InputNamePair  targetStateName=\"DavonInsNetzEingespeist\" name=\"...davon ins Netz eingespeist:\" unit=\"%\"/>\r\n                    <OutputNamePair name=\"entspricht:\" value={checkIfDefined((state.elektrischeLeistung*state.BetriebsstundenBHKW/1000) * state.DavonInsNetzEingespeist/100)} unit=\"MWh/a\" />\r\n                    <OutputNamePair name=\"Wärmeproduktion BHKW:\" value={checkIfDefined(bhkwState[state.elektrischeLeistung].thermischeLeistung*state.BetriebsstundenBHKW/1000) } unit=\"MWh/a\" />\r\n                    <OutputNamePair name=\"Brennstoffeinsatz im BHKW Hi:\" value={checkIfDefined(bhkwState[state.elektrischeLeistung].brennstoffleistungKWHi * state.BetriebsstundenBHKW/1000)} unit=\"MWh/a\" />\r\n                    <OutputNamePair name=\"Brennstoffeinsatz im BHKW Hs:\" value={checkIfDefined(bhkwState[state.elektrischeLeistung].brennstoffleistungKWHi * state.BetriebsstundenBHKW/1000 * 1.107, true)} unit=\"MWh/a\" />\r\n                    <SubHeader subHeader=\"daraus folgt:\"/>\r\n                    <OutputNamePair name=\"Summe Reststrombezug:\" value={calcLogic.summeReststrombezug(state.GesamtbedarfStrom, checkIfDefined(state.elektrischeLeistung*state.BetriebsstundenBHKW/1000), checkIfDefined((state.elektrischeLeistung*state.BetriebsstundenBHKW/1000) * state.DavonInsNetzEingespeist/100))} unit=\"MWh/a\" />\r\n                    <OutputNamePair name=\"Summe Restwärme aus Kessel:\" value={calcLogic.summeRestwärmeAusKessel(checkIfDefined(bhkwState[state.elektrischeLeistung].thermischeLeistung*state.BetriebsstundenBHKW/1000), checkIfDefined(state.GesamtbedarfErdgasFürHeizungUndWarmwasser/(1.107/state.JahresanlagennutzungsgradWärmeerzeuger * 100)))} unit=\"MWh/a\" />\r\n                    <OutputNamePair name=\"Brennstoffeinsatz im Kessel Hs:\" value={calcLogic.brennstoffeinsatzImKessel(checkIfDefined(bhkwState[state.elektrischeLeistung].thermischeLeistung*state.BetriebsstundenBHKW/1000), checkIfDefined(state.GesamtbedarfErdgasFürHeizungUndWarmwasser/(1.107/state.JahresanlagennutzungsgradWärmeerzeuger * 100)), state.JahresanlagennutzungsgradWärmeerzeuger)} unit=\"MWh/a\" />\r\n                </InputSeperator>\r\n             </InputShell>\r\n             {/*Werte aus EON Kalktool u. sonstige Parameter Section*/}\r\n             <InputShell headerLeft=\"Werte aus EON Kalktool\" headerRight=\"sonstige Parameter\">\r\n                 {/*left side*/}\r\n                <InputSeperator>\r\n                    <InputNamePair targetStateName=\"InvestitionLautAnbieter\" name=\"Investition laut Anbieter:\" unit=\"€\"/>\r\n                    <InputNamePair targetStateName=\"KapitalzinsDerFinazierendenBank\" name=\"Kapitalzins der finazierenden Bank:\" unit=\"%\" />\r\n                    <InputNamePair targetStateName=\"Finanzierungszeitraum\" name=\"Finanzierungszeitraum:\" unit=\"a\" />\r\n                    <InputNamePair targetStateName=\"Vollwartung\" name=\"Vollwartung:\" unit=\"€/Bh\" />\r\n                    <InputNamePair targetStateName=\"KostenVollrevision\" name=\"KostenVollrevision:\" unit=\"€\" />\r\n                    {/*fehlendes Einfügen!!!!!*/}\r\n                </InputSeperator>\r\n                {/*right side*/}\r\n                <InputSeperator>\r\n                    <InputNamePair targetStateName=\"ErdgassteuerRückerstattung\" name=\"Ergassteuer Rückerstattung\" unit=\"€/MWh\"/>\r\n                    <InputNamePair targetStateName=\"AnteilEEGUmlageEigenstrom\" name=\"Anteil EEG-Umlage Eigenstrom\" unit=\"%\"/>\r\n                    <InputNamePair targetStateName=\"SteigerungErdgasProA\" name=\"Steigerung Erdgas pro a:\" unit=\"%\"/>\r\n                    <InputNamePair targetStateName=\"SteigerungStromProA\" name=\"Steigerung Strom pro a:\" unit=\"%\"/>\r\n                    <InputNamePair targetStateName=\"PreissteigerungenWartungProA\" name=\"Preissteigerungen Wartung pro a:\" unit=\"%\"/>\r\n                </InputSeperator>\r\n             </InputShell>\r\n\r\n             {/*Final Output Section*/}\r\n\r\n             <FinalOutputSection />\r\n             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainHomeScreen",["136","137"],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HomeScreenComps\\InputNamePair.js",[],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HomeScreenComps\\InputSeperator.js",[],["138","139"],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HomeScreenComps\\SubHeader.js",[],["140","141"],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HomeScreenComps\\OutputNamePair.js",[],["142","143"],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HoemScreenOutputComps\\OutputField.js",[],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HoemScreenOutputComps\\StaticAndDynamicOutputRow.js",[],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HoemScreenOutputComps\\FinalOutputSection.js",[],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\dataClasses\\BHKWStromKW.js",[],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\store\\useVerweiseStore.js",[],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HomeScreenComps\\calcLogic.js",["144"],"\r\n\r\nconst toMath = (calc) => {\r\n    if (calc) {\r\n    return parseFloat(calc)\r\n    }\r\n    return 0\r\n} \r\n\r\nconst zz = (typeg, elektrischeLeistung) => {\r\n    if (typeg) {\r\n        const netzCalc = (einspeisung, kw, kwdiff) => {\r\n            if (elektrischeLeistung <= kw) {return 0}\r\n            if (elektrischeLeistung > einspeisung) {\r\n                return (kwdiff/elektrischeLeistung * einspeisung)\r\n            }\r\n            return ((elektrischeLeistung-100)/elektrischeLeistung * einspeisung)}\r\n\r\n            const einspeisungArr = [\r\n                elektrischeLeistung > 50 ? 0.08 : 0.16,\r\n                0.06,\r\n                0.05,\r\n                0.044,\r\n                0.31\r\n            ]\r\n            const summantenArr = [\r\n                elektrischeLeistung > 50 ? (50/elektrischeLeistung * einspeisungArr[0]) : einspeisungArr[0],\r\n                netzCalc(einspeisungArr[1], 50, 50),\r\n                netzCalc(einspeisungArr[2], 100, 150),\r\n                netzCalc(einspeisungArr[3], 250, 1750),\r\n                elektrischeLeistung <= 2000 ? 0 : (elektrischeLeistung - 2000)/elektrischeLeistung * 10\r\n            ]\r\n            return (summantenArr.reduce((pv, cv) => pv + cv, 0))\r\n        }\r\n    \r\n        const eigenverbrauchArr = [\r\n            elektrischeLeistung > 50 ? 0.04 : 0.08,\r\n            0.03,\r\n            0,\r\n            0,\r\n            0\r\n        ]\r\n        \r\n        const summmantenArr = [\r\n            elektrischeLeistung > 100 ? 0 : (elektrischeLeistung > 50 ? 50/elektrischeLeistung * eigenverbrauchArr[0] : eigenverbrauchArr[0]),\r\n            elektrischeLeistung > 100 ? 0 : (elektrischeLeistung <= 50 ? 0 : (elektrischeLeistung - 50)/elektrischeLeistung * eigenverbrauchArr[1]),\r\n            0,\r\n            0,\r\n            0\r\n        ]\r\n        return(summmantenArr.reduce((pv, cv) => pv + cv, 0))\r\n\r\n    }\r\n\r\nconst calcLogic = {\r\n    summeReststrombezug: (gesamtbedarfStrom, erzeugteStrommengeImBHKW, entspricht) => {\r\n        const a = toMath(gesamtbedarfStrom)\r\n        const b = toMath(erzeugteStrommengeImBHKW)\r\n        const c = toMath(entspricht)\r\n        const checkVal = b - c\r\n        return (checkVal > a ? 0 : Math.round(a - checkVal)) \r\n    },\r\n    summeRestwärmeAusKessel: (wärmeproduktionBHKW, entsprichtEinemWärmebedarf) => {\r\n        const a = toMath(wärmeproduktionBHKW)\r\n        const b = toMath(entsprichtEinemWärmebedarf)\r\n        if (a > b) {\r\n            \r\n            return 0\r\n        }\r\n        return (Math.round(b - a))\r\n    },\r\n    brennstoffeinsatzImKessel: (wärmeproduktionBHKW, entsprichtEinemWärmebedarf, jahresanlagennutzungsgradWärmeerzeuger) => {\r\n        const a = toMath(wärmeproduktionBHKW)\r\n        const b = toMath(entsprichtEinemWärmebedarf)\r\n        const c = toMath(jahresanlagennutzungsgradWärmeerzeuger)\r\n\r\n        if (a > b) {\r\n            return 0\r\n        }\r\n        if (Math.round((b-a)*1.107/(c/100))) {\r\n        return (Math.round((b-a)*1.107/(c/100)))\r\n        }\r\n        return 0\r\n    },\r\n    verbrauchteZuschlagsberechtigteBetriebsstunden: (elektrischeLeistung, davonInsNetzEingespeist, betriebsstundenBHKW, maximalZuschlagsberechtigteVollbenutzungsstunden, multiplikator) => {\r\n        const a = toMath(elektrischeLeistung)\r\n        const b = toMath(davonInsNetzEingespeist)\r\n        const c = toMath(betriebsstundenBHKW)\r\n        const d = toMath(maximalZuschlagsberechtigteVollbenutzungsstunden)\r\n        \r\n        if (a <= 100 && (c * multiplikator) < d) {\r\n            return (c * multiplikator)\r\n        }\r\n        if (d > c * b/100 && a > 100) {\r\n            return c*b/100\r\n        }\r\n        return d\r\n    },\r\n    preisteigungsFunktion: (basis, steigung, exponent) => {\r\n        const a = toMath(basis)\r\n        const b = toMath(steigung)\r\n        const c = toMath(exponent)\r\n        \r\n        return Math.round(a * Math.pow((1 + b/100),c))  \r\n    },\r\n    EEGOutput: (EEGUmlage, erzeugteStrommengeImBHKW, entspricht, AnteilEEGUmlageEigenstrom) => {\r\n        const a = toMath(EEGUmlage)\r\n        const b = toMath(erzeugteStrommengeImBHKW)\r\n        const c = toMath(entspricht)\r\n        const d = toMath(AnteilEEGUmlageEigenstrom)\r\n\r\n        return Math.round(a * 10 * d/100 * (b-c))\r\n    },\r\n    rmz: (ir, np, pv, fv, type) => {\r\n        if (!(ir && np && pv)) {\r\n            return 0\r\n        }\r\n        /*\r\n         * ir   - interest rate per month\r\n         * np   - number of periods (months)\r\n         * pv   - present value\r\n         * fv   - future value\r\n         * type - when the payments are due:\r\n         *        0: end of the period, e.g. end of month (default)\r\n         *        1: beginning of period\r\n         */\r\n        let pmt, pvif;\r\n    \r\n        fv || (fv = 0);\r\n        type || (type = 0);\r\n    \r\n        if (ir === 0)\r\n            return -(pv + fv)/np;\r\n    \r\n        pvif = Math.pow(1 + ir, np);\r\n        pmt = - ir * pv * (pvif + fv) / (pvif - 1);\r\n    \r\n        if (type === 1)\r\n            pmt /= (1 + ir);\r\n    \r\n        return Math.round(pmt);\r\n    },\r\n    VollrevisionRechner: (kostenVollrevision, preissteigerungenWartungProA, betriebsstundenBHKW,exponent) => {\r\n        const a = toMath(kostenVollrevision)\r\n        const b = toMath(preissteigerungenWartungProA)\r\n        const c = toMath(betriebsstundenBHKW)\r\n        const d = toMath(exponent)\r\n        \r\n       \r\n        \r\n        return Math.round(a * Math.pow((1 + b/100), d))\r\n        \r\n    },\r\n    kwkBonus: (elektrischeLeistung, verbrauchteZuschlagsberechtigteBetriebsstunden, betriebsstundenBHKW, maximalZuschlagsberechtigteVollbenutzungsstunden, entspricht, erzeugteStrommengeImBHKW) => {\r\n        const a = toMath(elektrischeLeistung)\r\n        const b = toMath(verbrauchteZuschlagsberechtigteBetriebsstunden)\r\n        const c = toMath(betriebsstundenBHKW)\r\n        const d = toMath(maximalZuschlagsberechtigteVollbenutzungsstunden)\r\n        const e = toMath(entspricht)\r\n        const f = toMath(erzeugteStrommengeImBHKW)\r\n        \r\n        if (a > 100) {\r\n            return (Math.round(b * a * zz(true, a)))\r\n        }\r\n        if (c > d) {\r\n            \r\n            return ( Math.round( ((-1) * (e * 1000 * zz(true, a) + (f - e)* 1000 * zz(false, a)) * (b/c) ) ))\r\n        }\r\n        return (Math.round( ((-1) * (e * 1000 * zz(true, a) + (f - e) * 1000 * zz(false, a))) ))\r\n    },\r\n    kwkSpecial: (prevVerbrauchteZuschlagsberechtigteBetriebsstunden, prevVerbrauchteZuschlagsberechtigteKummulierteBetriebsstunden, verbrauchteZuschlagsberechtigteKummulierteBetriebsstunden, prevKWK) => {\r\n        const a = prevVerbrauchteZuschlagsberechtigteBetriebsstunden\r\n        const b = prevVerbrauchteZuschlagsberechtigteKummulierteBetriebsstunden\r\n        const c = verbrauchteZuschlagsberechtigteKummulierteBetriebsstunden\r\n        const d = prevKWK\r\n\r\n        if (c <= 30000) {\r\n            return d\r\n        }\r\n        if (c > 30000 && c < 33500) {\r\n            return (d/a * (30000-b)*1)\r\n        }\r\n        return 0\r\n    },\r\n    rückerstattungErdgassteuer: (brennstoffeinsatzImBHKWHs, erdgassteuerRückerstattung) => {\r\n        const a = toMath(brennstoffeinsatzImBHKWHs)\r\n        const b = toMath(erdgassteuerRückerstattung)\r\n\r\n        return (Math.round(a * b * (-1)))\r\n    },\r\n    emissionenC7: (brennstoffeinsatzImKessel/*Daten!J30*/,brennstoffeinsatzImBHKWHs/*Daten!J26*/ ) => {\r\n        const a = toMath(brennstoffeinsatzImKessel)\r\n        const b = toMath(brennstoffeinsatzImBHKWHs)\r\n        \r\n        return( Math.round( ((a * 1000 + b * 1000) * 0.202)/1000) )\r\n    },\r\n    produktPreisteigerung: (GesamtbedarfErdgasFürHeizungUndWarmwasser, BasisgaspreisInklAllerAbgabenNetto, SteigerungErdgasProA, exponent) => {\r\n        const a = toMath(GesamtbedarfErdgasFürHeizungUndWarmwasser)\r\n        const b = toMath(BasisgaspreisInklAllerAbgabenNetto)\r\n        const c = toMath(SteigerungErdgasProA)\r\n        const d = toMath(exponent)\r\n\r\n        return (Math.round( (a*b) * Math.pow((1 + c/100), d ) ))\r\n    },\r\n    emissionenB7: (GesamtbedarfErdgasFürHeizungUndWarmwasser/*D10*/) => {\r\n        const a = toMath(GesamtbedarfErdgasFürHeizungUndWarmwasser)\r\n        \r\n        \r\n        return( (((a * 1000) * 0.202)/1000 ) )\r\n    },\r\n    VollrevisionArrayCalc: (arr, bhkBetriebstundenarr) => {\r\n        let currentMultiplier = 1\r\n        let returnArr = []\r\n       \r\n        for (let i = 0; i < arr.length; i++) {\r\n            \r\n            if (bhkBetriebstundenarr[i] >= 30000 * currentMultiplier) {\r\n                currentMultiplier++\r\n                returnArr.push(Math.round(arr[i + 1]))\r\n                continue\r\n            }\r\n            returnArr.push(0)\r\n        }\r\n        \r\n        return returnArr    \r\n    }\r\n}\r\n\r\nexport default calcLogic","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\screens\\ImpressumScreen.js",[],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\Footer.js",[],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\HomeScreenComps\\convertLogic.js",[],["145","146"],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\Data\\complicatedData.js",["147","148","149"],"import calcLogic from \"../HomeScreenComps/calcLogic\"\r\nimport useStore from \"../../store/useStore\"\r\nimport convertLogic from \"../HomeScreenComps/convertLogic\"\r\n\r\n\r\nconst checkIfValid = (calc) => {\r\n    if (parseFloat(calc)) {\r\n        return parseFloat(calc)\r\n    }\r\n    return 0\r\n}\r\n\r\nconst checkIfDefined = (calculation, doRound) => {\r\n    return  ((calculation) ? (doRound ? Math.round((calculation)) : (Math.round((calculation) *100))/100) : \"0\")\r\n}\r\n\r\n\r\n\r\nconst complicatedData = (toAccsess, state) => {\r\n    const dataObject = {\r\n        VollrevisionDaten: calcLogic.VollrevisionArrayCalc([\r\n            calcLogic.VollrevisionRechner(state.KostenVollrevision, state.PreissteigerungenWartungProA, checkIfValid(state.BetriebsstundenBHKW * 1), 0),\r\n            calcLogic.VollrevisionRechner(state.KostenVollrevision, state.PreissteigerungenWartungProA, checkIfValid(state.BetriebsstundenBHKW * 2), 1),\r\n            calcLogic.VollrevisionRechner(state.KostenVollrevision, state.PreissteigerungenWartungProA, checkIfValid(state.BetriebsstundenBHKW * 3), 2),\r\n            calcLogic.VollrevisionRechner(state.KostenVollrevision, state.PreissteigerungenWartungProA, checkIfValid(state.BetriebsstundenBHKW * 4), 3),\r\n            calcLogic.VollrevisionRechner(state.KostenVollrevision, state.PreissteigerungenWartungProA, checkIfValid(state.BetriebsstundenBHKW * 5), 4),\r\n            calcLogic.VollrevisionRechner(state.KostenVollrevision, state.PreissteigerungenWartungProA, checkIfValid(state.BetriebsstundenBHKW * 6), 5),\r\n            calcLogic.VollrevisionRechner(state.KostenVollrevision, state.PreissteigerungenWartungProA, checkIfValid(state.BetriebsstundenBHKW * 7), 6),\r\n            calcLogic.VollrevisionRechner(state.KostenVollrevision, state.PreissteigerungenWartungProA, checkIfValid(state.BetriebsstundenBHKW * 8), 7),\r\n            calcLogic.VollrevisionRechner(state.KostenVollrevision, state.PreissteigerungenWartungProA, checkIfValid(state.BetriebsstundenBHKW * 9), 8),\r\n        ], [\r\n            checkIfValid(state.BetriebsstundenBHKW * 1),\r\n            checkIfValid(state.BetriebsstundenBHKW * 2),\r\n            checkIfValid(state.BetriebsstundenBHKW * 3),\r\n            checkIfValid(state.BetriebsstundenBHKW * 4),\r\n            checkIfValid(state.BetriebsstundenBHKW * 5),\r\n            checkIfValid(state.BetriebsstundenBHKW * 6),\r\n            checkIfValid(state.BetriebsstundenBHKW * 7),\r\n            checkIfValid(state.BetriebsstundenBHKW * 8),\r\n            checkIfValid(state.BetriebsstundenBHKW * 9),\r\n        ])\r\n    }\r\n\r\n    return dataObject[toAccsess]\r\n}\r\n   \r\n\r\n\r\nexport default complicatedData\r\n\r\n","C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\screens\\InfoScreen.js",[],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\InfoScreenComps\\InfoContainer.js",[],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\InfoScreenComps\\InfoHeader.js",[],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\InfoScreenComps\\InfoParagraph.js",[],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\InfoScreenComps\\InfoImg.js",[],"C:\\Users\\lukef\\ReactJSProjects\\bhkwtool\\src\\components\\InfoScreenComps\\InfoSectorBorder.js",[],["150","151"],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"152","replacedBy":"156"},{"ruleId":"154","replacedBy":"157"},{"ruleId":"152","replacedBy":"158"},{"ruleId":"154","replacedBy":"159"},{"ruleId":"152","replacedBy":"160"},{"ruleId":"154","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":1,"column":16,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"152","replacedBy":"166"},{"ruleId":"154","replacedBy":"167"},{"ruleId":"152","replacedBy":"168"},{"ruleId":"154","replacedBy":"169"},{"ruleId":"152","replacedBy":"170"},{"ruleId":"154","replacedBy":"171"},{"ruleId":"152","replacedBy":"172"},{"ruleId":"154","replacedBy":"173"},{"ruleId":"162","severity":1,"message":"174","line":146,"column":15,"nodeType":"164","messageId":"165","endLine":146,"endColumn":16},{"ruleId":"152","replacedBy":"175"},{"ruleId":"154","replacedBy":"176"},{"ruleId":"162","severity":1,"message":"177","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":16},{"ruleId":"162","severity":1,"message":"178","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":20},{"ruleId":"162","severity":1,"message":"179","line":13,"column":7,"nodeType":"164","messageId":"165","endLine":13,"endColumn":21},{"ruleId":"152","replacedBy":"180"},{"ruleId":"154","replacedBy":"181"},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],["182"],["183"],["182"],["183"],["182"],["183"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["182"],["183"],["182"],["183"],["182"],["183"],["182"],["183"],"'c' is assigned a value but never used.",["182"],["183"],"'useStore' is defined but never used.","'convertLogic' is defined but never used.","'checkIfDefined' is assigned a value but never used.",["182"],["183"],"no-global-assign","no-unsafe-negation"]